import { Injectable, OnModuleInit } from '@nestjs/common';
import { TelegramService } from './telegram.service';

enum EMainMenu {
    STATUS = 'üìÑ –°—Ç–∞—Ç—É—Å',
    TASK = '‚ûï –ó–∞–¥–∞—á–∞',
}

enum EStock {
    BitMex = 'BitMex',
    ByBit = 'ByBit',
    Binance = 'Binance',
    Deribit = 'Deribit',
    Okex = 'Okex',
    Huobi = 'Huobi',
}

@Injectable()
export class MenuService implements OnModuleInit {
    constructor(private telegramService: TelegramService) {}

    async onModuleInit(): Promise<void> {
        this.telegramService.setNextStepContext(this);
        await this.telegramService.sendText('–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞', false);
        await this.mainMenu();
    }

    async mainMenu(): Promise<void> {
        this.telegramService.setNextStep(this.mainMenuSelect);
        await this.telegramService.sendText('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', Object.values(EMainMenu));
    }

    async mainMenuSelect(selected: string): Promise<void> {
        switch (selected) {
            case EMainMenu.STATUS:
                await this.showStatus();
                break;

            case EMainMenu.TASK:
                await this.startConstructTask();
                break;

            default:
                await this.telegramService.sendText('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é');
        }
    }

    async showStatus(): Promise<void> {
        // TODO -
    }

    async startConstructTask(): Promise<void> {
        // TODO -
        await this.taskStock();
    }

    async taskStock(): Promise<void> {
        this.telegramService.setNextStep(this.taskStockInput);
        await this.telegramService.sendText('–í—ã–±–µ—Ä–∏ –±–∏—Ä–∂—É', Object.values(EStock));
    }

    async taskStockInput(): Promise<void> {
        // TODO -
    }
}
